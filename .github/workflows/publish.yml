name: Publish

on:
  push:
    branches:
      - 'release'
    tags:
      - '*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get commit hash
      id: vars
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Install dependencies
      run: sudo apt-get install xorg-dev

    - name: Install Fyne bundler
      run: go get fyne.io/fyne/v2/cmd/fyne

    - name: Build Linux Package
      run: fyne package -os linux -icon icon.png
    - name: Zip MacOS Package
      run: zip -r imgpalette-linux.zip imgpalette

    # - name: Release Linux Package
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: imgpalette
    #     asset_name: imgpalette
    #     tag: ${{ github.ref }}

    - name: Build MacOS Package
      run: fyne package -os darwin -icon icon.png
    - name: Zip MacOS Package
      run: zip -r imgpalette-macosx.zip imgpalette.app

    # - name: Release MacOS Package
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: imgpalette.app
    #     asset_name: imgpalette.app
    #     tag: ${{ github.ref }}

    # - name: Build Windows Package
    #   run: fyne package -os windows -icon icon.png

    # - name: Release Windows Package
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: imgpalette.exe
    #     asset_name: imgpalette.exe
    #     tag: ${{ github.ref }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ steps.vars.outputs.sha_short }}
        release_name: Release ${{ steps.vars.outputs.sha_short }}
        body: |
                Release ${{ steps.vars.outputs.sha_short }} body
        
    - name: List files
      run: ls -alh
    - name: Release with assets
      uses: AButler/upload-release-assets@v2.0
      with:
        files: 'imgpalette-macosx.zip;imgpalette-linux.zip'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: release-${{ steps.vars.outputs.sha_short }}
